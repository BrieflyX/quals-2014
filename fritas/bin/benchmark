#!/usr/bin/env ruby
$LOAD_PATH << File.join(File.dirname(__FILE__), '..', 'lib')

require 'pp'
require 'socket'
require 'fritas/codec'

time_lock = Mutex.new
times = []

fail_lock = Mutex.new
fails = 0

forks = 50.times.map do 
  Thread.new do
    begin
      sleep rand
      s = TCPSocket.new 'localhost', 6908
      s.setsockopt(Socket::IPPROTO_TCP, Socket::TCP_NODELAY, true)

      c = Fritas::Codec.new s

      h = c.expect :Hello
      c.write :Hello, uuid: h.uuid

      c.expect(:Ready)

      start = Time.now.to_f
      10.times do
        c.write :ListTagReq
        resp = c.expect :ListTagResp
        resp.tags.each do |t|
          c.write :RelatedTagReq, tag: t
          c.expect :RelatedTagResp
        end
      end

      time_lock.synchronize do
        times << (Time.now.to_f - start)
      end
      c.close
    rescue => e
      fail_lock.synchronize do
        fails += 1
        puts e
        puts e.backtrace
      end
    end
  end
end

forks.each(&:join)

puts "average: #{times.inject(&:+).to_f / times.length}"
puts "wins: #{times.length}"
puts "fails: #{fails}"
